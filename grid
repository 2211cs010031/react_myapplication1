<style>
        .parent{
            height: 700px;
            display: grid;
grid-template-rows: 15% 70% 15%;
grid-template-columns: 15% 70% 15%;

        }
        .header{
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: blue;
            grid-row: 1/2;
            grid-column: 1/4;

        }
        .aside{
            background-color: blueviolet;
            grid-row: 2/3;
            grid-column: 1/2;

        }
        .main{
            background-color: brown;
            grid-row: 2/3;
            grid-column:2/3 ;

        }
        .rightmenu{
            background-color: aqua;
            grid-row: 2/3;
            grid-column: 3/4;

        }
        .footer{
            background-color: black;
            grid-row: 3/4;
            grid-column: 1/4;

        }
    </style>
</head>
<body>
    <div class="parent">
        
        <div class="header">1</div>
        <div class="aside">2</div>
        <div class="main">3</div>
        <div class="rightmenu">4</div>
        <div class="footer">5</div>

        <!-- <div class="child c1">1</div>
        <div class="child c2">2</div>
        <div class="child c3">3</div>

        <div class="child c1">1</div>
        <div class="child c2">2</div>
        <div class="child c3">3</div> -->
    </div>
    
</body>
</html>


Flex:
1.it is one directional
2.flexiblel and easy to work
Limited tools
It is by default a responsive web page


Grid:
It is two dimensional/directional
Complex but very useful
Advanced tools
We can make grid responsive by using some tools
Display grid:
It defines the grid container
2.Grid template rows:it specifies how many rows that a web page contain and how much space each web page occupies
3.grid template columns:it specifies that how many columns the web page contain and how much space each web page occupies
4.Grid-rows:specifies the start and the end of the particular row
5.grid-columns:specifies the start and end of each column
